pool:
  vmImage: windows-latest
  demands:
    # These are needed for building `@newrelic/native-metrics` dependency
    - msbuild
    - visualstudio

variables:
  - template: variables/main.yml
  - template: variables/checkout-and-cache.yml

stages:
- stage: Lint

  jobs:
    - job: Lint

      steps:
      - template: templates/checkout-and-cache.yml

      - script: yarn run lint
        displayName: 'Lint TypeScript'

      - script: yarn run lint:css
        displayName: 'Lint CSS'

- stage: Build

  dependsOn:
    - Lint

  jobs:
    - job: Build

      steps:
        - template: templates/checkout-and-cache.yml

        - task: Cache@2
          displayName: 'Cache Built Source'
          inputs:
            key: 'build | "$(Agent.OS)" | "$(Build.BuildNumber)"'
            path: '$(Pipeline.Workspace)/s'

        - script: yarn run build
          displayName: 'Build App'
          env:
            NODE_ENV: production

- stage: Test

  jobs:
    - job: Jest
      displayName: 'Run Jest Tests / Coverage'

      steps:
        - template: templates/checkout-and-cache.yml

        - script: yarn run test:ci
          displayName: 'Run jest Tests'

        - task: PowerShell@2
          displayName: 'Upload Coverage (Codacy)'
          inputs:
            targetType: 'inline'
            script: |
              $LatestVersion = "$(Invoke-WebRequest -URI https://artifacts.codacy.com/bin/codacy-coverage-reporter/latest)"
              
              Invoke-WebRequest `
                -URI "https://artifacts.codacy.com/bin/codacy-coverage-reporter/$LatestVersion/codacy-coverage-reporter-assembly.jar" `
                -OutFile codacy-coverage-reporter-assembly.jar
              java -jar codacy-coverage-reporter-assembly.jar `
                report `
                -r clover.xml `
                -t $(CODACY_PROJECT_TOKEN)

        - task: PublishCodeCoverageResults@1
          displayName: 'Upload Coverage (Azure)'
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: 'cobertura-coverage.xml'
            failIfCoverageEmpty: true

        - task: PublishTestResults@2
          displayName: 'Upload Test Results (Azure)'
          condition: succeededOrFailed()
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: 'junit.xml'
            searchFolder: '$(Pipeline.Workspace)/s'
            failTaskOnFailedTests: true
            testRunTitle: 'Jest Tests'

- stage: Deploy

  dependsOn:
    - Lint
    - Build
    - Test

  jobs:
    - job: Deploy

      steps:
        - template: templates/checkout-and-cache.yml

        - task: Cache@2
          displayName: 'Cache Built Source'
          inputs:
            key: 'build | "$(Agent.OS)" | "$(Build.BuildNumber)"'
            path: '$(Pipeline.Workspace)/s'

        - task: ArchiveFiles@2
          displayName: 'Archive Build Artifacts'

          inputs:
            rootFolderOrFile: '.'
            includeRootFolder: false
            archiveType: 'tar'
            archiveFile: '$(Build.ArtifactStagingDirectory)/kl-ui.tar.gz'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Build Artifacts'

          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/kl-ui.tar.gz'
            ArtifactName: 'kl-ui-artifact'
            publishLocation: 'Container'
